---
# File: roles/install-wordpress/tasks/main.yml
# Purpose: Install and configure WordPress on a target droplet.

- name: Copy DigitalOcean Root CA Certificate to /etc/pki/ca-trust/source/anchors/
  copy:
    src: '../files/ca-certificate.crt'
    dest: '/etc/pki/ca-trust/source/anchors/'
  register: do_cert_added

- name: Install DigitalOcean Root CA Certificate
  shell: update-ca-trust
  when: do_cert_added.changed

- name: Install packages required to run WordPress
  action: >
    {{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes
  with_items:
    - mysql
    - php
    - php-mysqlnd
    - php-fpm
    - php-json
    - php-gd
    - php-mbstring
    - php-pdo
    - php-xml
    - php-pecl-zip
    - ImageMagick

- name: Replace configuration file for php-fpm to reduce memory consumption
  copy:
    src: '../files/www.conf'
    dest: '/etc/php-fpm.d/www.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: phpfpm_config

- name: Restart php-fpm
  service:
    name: php-fpm
    state: restarted
    enabled: true
  when: phpfpm_config.changed

- name: Check if WordPress has already been installed
  stat:
    path: '{{ wp_install_directory }}/wp-config.php'
  register: is_wp_installed

- name: Get database configuration
  command: 'cat {{ wp_database_json_config }}'
  register: db_config

- set_fact:
    database: '{{ db_config.stdout | from_json }}'

- set_fact:
    wp_database_server_endpoint: '{{ database.database_host }}'

- set_fact:
    wp_database_server_port: '{{ database.database_port }}'

- set_fact:
    wp_database_password: '{{ database.database_password }}'

- name: Download and extract WordPress package
  unarchive:
    src: '{{ wp_download_url }}'
    dest: '{{ wp_install_directory }}'
    remote_src: yes
    extra_opts: [--strip-components=1]
  when: not is_wp_installed.stat.exists

- name: Generate WordPress salts for wp-admin.php
  get_url:
    url: '{{ wp_salt_gen_url }}'
    dest: '/tmp/wp_salts'
  when: not is_wp_installed.stat.exists

- name: Create variable from salts downloaded
  shell: 'cat /tmp/wp_salts'
  register: wp_salts
  when: not is_wp_installed.stat.exists

- name: Ensure /tmp/wp_salts is not present
  file:
    path: '/tmp/wp_salts'
    state: absent

- name: Configure permissions on directories
  file:
    path: '{{ wp_install_directory }}'
    state: directory
    recurse: true
    owner: 'apache'
    group: 'apache'
    mode: '0750'

- name: Create wp-config.php
  template:
    src: '../templates/wp-config.php.j2'
    dest: '{{ wp_install_directory }}/wp-config.php'
    owner: 'apache'
    group: 'apache'
    mode: '0400'
  when: not is_wp_installed.stat.exists

- name: 'Ensure Apache can access {{ wp_install_directory }}'
  shell: 'chcon -t httpd_sys_rw_content_t {{ wp_install_directory }} -R'

- name: Create daily backup script
  template:
    src: '../templates/backup-wordpress.j2'
    dest: '/etc/cron.daily/backup-wordpress'
    mode: '0700'

- name: Ensure Apache is restarted
  service:
    name: httpd
    state: restarted
    enabled: true
